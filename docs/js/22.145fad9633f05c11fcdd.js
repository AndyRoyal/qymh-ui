(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{"/EPs":function(n,e,o){"use strict";o.r(e);var t=o("YKMj"),r=function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var o in e)e.hasOwnProperty(o)&&(n[o]=e[o])};return function(e,o){function t(){this.constructor=e}n(e,o),e.prototype=null===o?Object.create(o):(t.prototype=o.prototype,new t)}}(),a=function(n,e,o,t){var r,a=arguments.length,l=a<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,o):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(n,e,o,t);else for(var s=n.length-1;s>=0;s--)(r=n[s])&&(l=(a<3?r(l):a>3?r(e,o,l):r(e,o))||l);return a>3&&l&&Object.defineProperty(e,o,l),l},l=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return r(e,n),e=a([Object(t.a)({})],e)}(t.d),s=o("KHd+"),i=Object(s.a)(l,function(){var n=this,e=n.$createElement,o=n._self._c||e;return o("div",{staticClass:"config"},[o("q-row",{attrs:{position:"fixed",t:"0",l:"0",col:"100",zIndex:"1"}},[o("q-head-bar",{attrs:{color:"white",bkColor:"deepskyblue",leftArrow:!0,centerText:"qymhui.config.js",rightEmpty:!0}})],1),o("q-row",{attrs:{h:"12"}}),o("q-row",{attrs:{pl:"2",pr:"2"}},[o("q-row",{attrs:{tag:"section"}},[o("q-cell",{attrs:{leftIcon:"q-icon icon-tagfill",leftIconColor:"deepskyblue",title:"思路",fontSize:"16",borderBottom:!0}}),o("q-row",{attrs:{fontSize:"14",lh:"9",mb:"2"}},[n._v("与其他UI框架不同,我们提供了config去改变默认的UI布局.\n你的项目的组件大小可能和UI库提供的不一样,没关系,\n我们内置了基础的UI布局,但你可以通过"),o("main",[n._v("qymhui.config.js")]),n._v("去修改我们的默认配置,\n打造一个属于自己项目的UI库")]),o("q-cell",{attrs:{leftIcon:"q-icon icon-edit",leftIconColor:"deepskyblue",title:"注意"}}),o("q-row",{attrs:{fontSize:"14",lh:"9",mb:"2"}},[n._v("在我们提供的默认配置中使用了"),o("main",[n._v("es6")]),n._v("的模块语法,\n而在你写入的"),o("main",[n._v("qymhui.config.js")]),n._v("中,只能使用"),o("main",[n._v("commonjs")]),n._v("引入模块.\n原因是因为我们需要在"),o("main",[n._v("webpack")]),n._v("中获取,所以没办法,以下是"),o("main",[n._v("es6")]),n._v("模块的默认配置")]),o("q-code",[n._v("// q-cell\nexport const qcell = {\n  bkColor: '',\n  hasPadding: true,\n  borderTop: false,\n  borderBottom: false,\n  borderColor: '#d6d7dc',\n  leftIcon: '',\n  leftIconColor: '',\n  leftText: '',\n  leftTextColor: '#333',\n  leftWidth: '',\n  title: '',\n  titleColor: '',\n  rightText: '',\n  rightTextColor: '',\n  rightArrow: false,\n  rightArrowColor: '#a1a1a1',\n  baseHeight: 1.2\n}\n\n// q-head-bar\nexport const qheadbar = {\n  color: '',\n  bkColor: '',\n  bothWidth: true,\n  hasPadding: true,\n  padding: 0.2,\n  borderTop: false,\n  borderBottom: false,\n  borderColor: '#d6d7dc',\n  leftEmpty: false,\n  leftArrow: false,\n  centerEmpty: false,\n  centerText: '',\n  centerTextColor: '',\n  rightEmpty: false,\n  rightArrow: false,\n  rightText: '',\n  rightTextColor: '',\n  baseHeight: 1.2\n}\n\n// q-search-bar\nexport const qsearchbar = {\n  color: '',\n  bkColor: '',\n  hasPadding: true,\n  padding: 0.2,\n  bothWidth: 1,\n  borderTop: false,\n  borderBottom: false,\n  borderColor: '#d6d7dc',\n  value: '',\n  leftArrow: false,\n  leftText: '',\n  leftTextColor: '',\n  searchBkColor: 'white',\n  placeholder: '请输入...',\n  clearable: false,\n  rightText: '搜索',\n  rightTextColor: '',\n  baseHeight: 1.2\n}\n\n// q-tabbar\nexport const qtabbar = {\n  bkColor: '',\n  borderTop: '',\n  borderBottom: '',\n  borderColor: '#d6d7dc',\n  baseHeight: 1.2\n}\n\n// q-text\nexport const qtext = {\n  lines: 0\n}\n\n// q-tag\nexport const qtag = {\n  bkColor: '#d6d7dc',\n  color: 'white',\n  fontSize: 12,\n  value: '',\n  hasBorder: false,\n  hasRadius: true,\n  borderColor: '#d6d7dc',\n  active: false,\n  activeBkColor: '',\n  activeColor: 'white'\n}\n\n// q-input\nexport const qinput = {\n  hasBorder: false,\n  borderBottom: true,\n  borderColor: '#d6d7dc',\n  bkColor: '',\n  color: '',\n  type: 'text',\n  fix: 4,\n  placeholder: ''\n}\n\n// q-radio\nexport const qradio = {\n  type: 'rect',\n  hasBorder: true,\n  borderColor: '#a1a1a1',\n  activeColor: '',\n  activeBkColor: '',\n  activeBorderColor: 'transparent'\n}\n\n// q-stepper\nexport const qstepper = {\n  color: '#F65A44',\n  min: 0,\n  max: '',\n  fix: 4\n}\n\n// q-overlay\nexport const qoverlay = {\n  position: '',\n  opacity: 0.3,\n  bkColor: 'white',\n  minHeight: 10,\n  maxHeight: 13,\n  show: false\n}\n\n// q-files\nexport const qfiles = {\n  multiple: true,\n  maxCount: 3,\n  maxSize: 4,\n  value: '点击上传',\n  hasBorder: true,\n  borderColor: '#a1a1a1'\n}\n\n// q-image\nexport const qimage = {\n  preLoad: 1.3,\n  loading: '',\n  attemp: 1,\n  bkSize: 'contain',\n  bkRepeat: 'no-repeat',\n  bkPosition: '50%'\n}\n\n// q-scroll\nexport const qscroll = {\n  // 下拉刷新\n  down: (vm) => {\n    return {\n      // 是否启用\n      use: true,\n      // 是否初次调用\n      auto: false,\n      // 回调\n      callback(mescroll) {\n        vm.$emit('refresh')\n      }\n    }\n  },\n  // 上拉加载\n  up: (vm) => {\n    return {\n      // 是否启用\n      use: true,\n      // 是否初次调用\n      auto: true,\n      // 是否启用滚动条\n      scrollbar: {\n        use: true\n      },\n      // 回调\n      callback: (page, mescroll) => {\n        vm.$emit('load', page)\n      },\n      // 无数据时的提示\n      htmlNodata: '<p class=\"upwarp-nodata\">-- 没有更多的数据 --</p>'\n    }\n  }\n}\n\n// $notice\nexport const $notice = {\n  // 提醒\n  toast: {\n    position: 'bottom',\n    timeout: 1500\n  },\n  // 弹窗\n  confirm: {\n    text: '请输入文字',\n    btnLeft: '确定',\n    btnRight: '取消'\n  }\n}\n\n// $cookie\nexport const $cookie = {\n  // 过期时间\n  enpireDays: 7\n}\n\n// $axios\nexport const $axios = {\n  // 是否输入日志\n  log: true,\n  // 超时\n  timeout: 20000,\n  // 请求拦截器\n  requestFn: (config) => {\n    return config\n  },\n  // 响应拦截器\n  responseFn: (response) => {\n    return response\n  }\n}")]),o("q-row",{attrs:{fontSize:"14",lh:"9",mb:"2"}},[n._v("以下是"),o("main",[n._v("commonjs")]),n._v("语法下新增的配置")]),o("q-code",[n._v("const SERVERCONFIG = require('./lib/appconfig').SERVERCONFIG\nconst isDev = process.env.NODE_ENV === 'development'\n\nmodule.exports={\n  // q-image\n  qimage: {\n    preLoad: 1.3,\n    loading: '',\n    error: './images/default.png',\n    attemp: 1\n  },\n  // $axios\n  $axios: {\n    domain: SERVERCONFIG.domain,\n    timeout: SERVERCONFIG.timeout,\n    requestFn: (config) => {\n      let { data } = config\n      console.log(`serverApi:${config.baseURL}${config.url}`)\n      if (Object.keys(data).length > 0) {\n        console.log(`request data ${JSON.stringify(data)}`)\n      }\n      return config\n    },\n    responseFn: (response) => {\n      let { status, data } = response\n      if (status >= 200 && status <= 300) {\n        console.log('---response data ---')\n        console.log(data)\n      } else {\n        console.log('--- error ---')\n        console.log(data)\n        let vm = new Vue()\n        vm.$notice.toast(status === 0 ? '网络链接异常' : `网络异常,错误代码:${status}`)\n      }\n      return response\n    }\n  }\n}")])],1)],1)],1)},[],!1,null,null,null);e.default=i.exports}}]);